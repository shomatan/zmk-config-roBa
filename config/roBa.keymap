#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define SCROLL 5
#define MOUSE 7
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define SCRL_UP MOVE_Y(ZMK_MOUSE_DEFAULT_SCRL_VAL)
#define SCRL_DOWN MOVE_Y(-ZMK_MOUSE_DEFAULT_SCRL_VAL)

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&tog { toggle-mode = "flip"; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        hold_layer_1: hold_layer_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_LAYER_1";
            bindings = <&lt>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E         &kp R         &kp T                                           &kp Y              &lt 3 U  &lt 5 I    &kp O    &lt 6 P
&kp A             &kp S             &lt 3 D       &lt 4 F       &kp G      &none                 &kp MINUS      &kp H              &kp J    &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X             &kp C         &kp V         &kp B      &kp LC(UP_ARROW)      &kp BACKSPACE  &kp N              &kp M    &kp COMMA  &kp DOT  &mt LEFT_CONTROL SLASH
&kp LEFT_SHIFT    &kp LEFT_CONTROL  &kp LEFT_ALT  &lt 1 ESCAPE  &lt 2 TAB  &kp LEFT_COMMAND      &lt 1 SPACE    &kp RIGHT_COMMAND                               &tog 1
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        NUM {
            bindings = <
&kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL                            &kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp DOLLAR        &kp PERCENT
&kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &none       &kp QUESTION  &kp SEMICOLON    &kp COLON    &kp UNDERSCORE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &none       &kp PIPE      &kp AMPERSAND    &none        &none           &none             &none
&trans        &trans        &kp NUMBER_0  &trans        &trans     &trans      &trans        &trans                                                          &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        SYMBOL {
            bindings = <
&kp BACKSLASH  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT                      &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none           &none
&kp GRAVE      &none              &none     &kp TILDE   &trans       &trans      &trans  &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans         &trans             &trans    &trans      &trans       &trans      &trans  &trans  &kp LESS_THAN         &kp GREATER_THAN       &none           &trans
&trans         &trans             &trans    &trans      &trans       &trans      &trans  &trans                                                               &trans
            >;
        };

        ARROW_FUNCTION {
            bindings = <
&none   &kp F7  &kp F8  &kp F9  &kp F10                      &trans          &trans          &none         &trans           &trans
&none   &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&none   &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans  &trans          &trans          &trans        &trans           &trans
&trans  &trans  &trans  &trans  &trans   &trans      &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &mkp MB4  &mkp MB5  &none     &trans    &trans
&trans  &trans  &none   &none   &trans  &trans      &trans  &trans    &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &none     &none     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MISC {
            bindings = <
&kp LS(LC(LG(NUMBER_4)))  &kp LC(NUMBER_7)  &kp LC(NUMBER_8)  &kp LC(NUMBER_9)  &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
&kp LS(LG(NUMBER_4))      &kp LC(NUMBER_4)  &kp LC(NUMBER_5)  &kp LC(NUMBER_6)  &trans  &trans      &bt BT_CLR      &none         &none         &none         &none         &none
&trans                    &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &trans  &trans      &bt BT_CLR_ALL  &none         &none         &none         &trans        &none
&trans                    &trans            &kp LC(NUMBER_0)  &trans            &trans  &trans      &trans          &trans                                                  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };
    };
};
